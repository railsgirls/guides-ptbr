---
layout: default
title: Tutorial de Instalação para Rails Girls
permalink: install
---

# Tutorial de Instalação para Rails Girls

Criado por Katie Ots, [site da Katie](http://www.katieots.com/)

Traduzido por Marcela Oliveira, [@magaeu](https://twitter.com/magaeu)

<span class="muted">Tempo previsto: 5min ativo / 15-30min passivo</span>

Para construir apps e outras coisas com Ruby on Rails, precisamos configurar alguns softwares e o ambiente de desenvolvimento em seu computador.

Siga as instruições para seu sistema operacional (SO). Se você tiver algum problema, não entre em pânico. Avise-nos e vamos resolver juntos.

* [Instalação para macOS](#instalação-para-os-x)
* [Instalação para Windows](#instalação-para-windows)
* [Instalação para Linux](#instalação-para-linux)
* [Utilização da Máquina Virtual](#utilização-da-máquina-virtual)
* [Utilização de Serviço em Nuvem - Não é necessária qualquer instalação](#utilização-de-serviço-em-nuvem)

<hr />

## Instalação para macOS

### *1.* Vamos checar a versão do seu sistema operacional.

Clique no menu Apple e escolha *About this Mac*.

![Apple menu](images/1.png "Apple menu")

### *2.* Na janela você irá encontrar a versão do seu sistema operacional.
Se a versão do seu sistema começa com 10.6, 10.7, 10.8, 10.9, 10.10 ou 10.11, esse é o tutorial exato para você. Caso seja outra versão, podemos configurar sua máquina durante o evento.

![About this Mac dialog](images/2.png "About this Mac dialog")

### *3a.* Se a versão do seu OS X/macOS é igual ou maior que 10.9:

Se o número da sua versão começa com 10.9, 10.10 ou 10.11, siga os passos abaixo. Vamos instalar o *homebrew* e *rbenv*.

#### *3a1.* Instalação via terminal por linha de comando:

{% highlight sh %}
xcode-select --install
{% endhighlight %}

#### *3a2.* Instalar [Homebrew](http://brew.sh/):

{% highlight sh %}
ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
{% endhighlight %}

#### *3a3.* Instalar [rbenv](https://github.com/sstephenson/rbenv):

{% highlight sh %}
brew update
brew install rbenv ruby-build
echo 'eval "$(rbenv init -)"' >> ~/.bash_profile
echo 'export PATH="$HOME/.rbenv/shims:$PATH"' >> ~/.bash_profile
source ~/.bash_profile
{% endhighlight %}

#### *3a4.* Instalar Ruby com rbenv:

Você pode encontrar a versão mais recente do Ruby pelo comando "rbenv install -l".

{% highlight sh %}
rbenv install 2.7.0
{% endhighlight %}

Se aparecer o erro **OpenSSL::SSL::SSLError: ... : certificate verify failed**, tente dessa maneira:

{% highlight sh %}
brew install curl-ca-bundle
cp /usr/local/opt/curl-ca-bundle/share/ca-bundle.crt `ruby -ropenssl -e 'puts OpenSSL::X509::DEFAULT_CERT_FILE'`
{% endhighlight %}

#### *3a5.* Configurar versão padrão do Ruby:

{% highlight sh %}
rbenv global 2.7.0
{% endhighlight %}

#### *3a6.* Instalar Rails:

{% highlight sh %}
gem install rails --no-document
{% endhighlight %}

### *3b.* Se a versão do seu OS X/macOS é 10.6, 10.7, ou 10.8:

Faça download do **RailsInstaller** para a versão do seu macOS:

* [RailsInstaller para 10.7 e 10.8](http://railsinstaller.s3.amazonaws.com/RailsInstaller-1.0.4-osx-10.7.app.tgz) <span class="muted">(325MB)</span>
* [RailsInstaller para 10.6](http://railsinstaller.s3.amazonaws.com/RailsInstaller-1.0.4-osx-10.6.app.tgz) <span class="muted">(224MB)</span>

Dê um duplo clique no arquivo baixado e ele será descompactado no diretório atual. Dê um duplo clique no arquivo descompactado **RailsInstaller-1.0.4-osx-10.7.app** ou **RailsInstaller-1.0.4-osx-10.6.app** e siga as instruções. O arquivo README será aberto com **Rails Installer macOS** no topo. Favor **IGNORAR** as instruções desse arquivo.

Se a versão do Rails não for a mais recente, você pode atualizá-la via terminal:

{% highlight sh %}
gem update rails --no-document
{% endhighlight %}

### *4.* Instalar yarn

{% highlight sh %}
brew install yarn
{% endhighlight %}

Se você precisa de mais informações para instalação do yarn, confira a [documentação de instalação do yarn](https://classic.yarnpkg.com/pt-BR/docs/install#mac-stable)

### *5.* Instalar editor de texto

Para esse workshop recomendamos o editor de texto Atom.

* [Baixar e instalar Atom](https://atom.io/)

Se você estiver usando macOS 10.7 ou versões anteriores, você pode utilizar outro editor [Sublime Text 2](http://www.sublimetext.com/2).

### *6.* Atualizar seu navegador

Acesse [whatbrowser.org](http://whatbrowser.org) e atualize seu navegador, caso não tenha a versão mais recente.

### *7.* Verificar o ambiente

Para ter certeza que tudo funciona bem crie uma aplicação via terminal:

{% highlight sh %}
rails -v
{% endhighlight %}

Deverá mostrar `Rails 6.0.0`(ou uma versão superior).

{% highlight sh %}
rails new myapp
{% endhighlight %}

{% highlight sh %}
rails cd myapp
{% endhighlight %}

{% highlight sh %}
rails server
{% endhighlight %}

Vá para `http://localhost:3000` no seu navegador, você verá a página 'Yay! You're on Rails!'.

**Parabéns, seu ambiente de desenvolvimento Ruby on Rail está pronto!**

**INSTRUTOR(A):** Recomendamos verificar o procedimento executando o comando scaffold e adicionando dados com a página gerada para assegurar que está tudo funcionando. Também remova o app de teste `myapp` para ter certeza que ninguém está na pasta errada, seguindo as etapas do workshop.

<hr />

## Instalação para Windows

Para instalar o Rails for Windows, precisamos instalar Ruby e várias ferramentas de suporte, como Git, Node.js e SQLite. Siga as etapas abaixo para instalar essas ferramentas no seu computador. Ao concluir essas etapas, você terá um aplicação Rails em execução no seu computador.

_Durante estas etapas, solicitaremos que você abra e feche o prompt de comando do Windows de vez em quando. Pode ser o aplicativo "Prompt de Comando" ou "Powershell" (dependendo do seu computador). Pedimos que você feche e abra novamente, porque quando o prompt de comando é iniciado, ele recarrega no seu ambiente. Quando instalamos um novo aplicativo, o ambiente não é atualizado automaticamente no prompt de comando. Para testar se a instalação foi bem-sucedida, precisamos reiniciar o prompt de comando e carregar o novo ambiente._

### *1.* Instalando Ruby

- Baixe o [RubyInstaller](https://rubyinstaller.org/downloads/) para Windows.
  - [Link direto para instalação do Ruby 2.6.5 com Devkit](https://github.com/oneclick/rubyinstaller2/releases/download/RubyInstaller-2.6.5-1/rubyinstaller-devkit-2.6.5-1-x86.exe) para arquitetura 32-bit.

- Execute o instalador. Clique no instalador usando todas as opções padrão.
  - Quando o instalador mostrar "MSYS2", digite `1` e pressione Enter.
  - Quando o instalador mostrar o mesmo "MSYS2" novamente, apenas pressione Enter de novo.

### *2.* Instalando Git

- Vá para a página de download do [Instalador de Git para Windows](https://git-scm.com/download/win).
  - Caso a arquitetura do seu computeador seja 32-bit, "32-bit Git for Windows Setup" e baixe esta versão.
- Execute o instalador. Clique no instalador usando todas as opções padrão.

### *3.* Instalando Node.js

- Vá para a página de download do Node.js [nodejs.org/en/download](https://nodejs.org/en/download/).
  - Selecione a aba da versão "LTS", que deve estar selecionada por padrão.
  - Na linha "Windows Installer (.msi)", clique no link da arquitetura de 32 bits para baixar o arquivo.
- Execute o instalador. Clique no instalador usando todas as opções padrão.
- Abra o prompt de comando do Windows e execute o seguinte comando para verificar se a instalação foi bem-sucedida. Ele deve mostrar uma versão como, por exemplo, `v12.16.0` (a versão mostrada pode ser diferente, e tudo bem).

{% highlight sh %}
node --version
{% endhighlight %}

- Feche o prompt de comando do Windows.

#### *3a.* Instalando yarn

- Vá para a [página para baixar o yarn](https://classic.yarnpkg.com/pt-BR/docs/install#windows-stable).
- Baixe o instalador clicando no botão: "Baixar o instalador".
- Execute o instalador. Clique no instalador usando todas as opções padrão.
- Abra o prompt de comando do Windows e execute o seguinte comando para verificar se a instalação foi bem-sucedida. Ele deve mostrar uma versão como, por exemplo,  `1.22.0` (a versão mostrada pode ser diferente, e ainda, vai estar tudo bem).

{% highlight sh %}
yarn --version
{% endhighlight %}

- Feche o prompt de comando do Windows.

### *4.* Instalando SQLite

- Vá para a página <https://sqlite.org/download.html>
- Role a página até a parte "Precompiled Binaries for Windows".
- Baixe o arquivo `sqlite-dll-win32-x86-xxxxxxx.zip` (em que `xxxxxxx` é o número da versão mais recente disponível).
- Baixe o arquivo `sqlite-tools-win32-x86-xxxxxxx.zip` (em que `xxxxxxx` é o número da versão mais recente disponível).
- Descompresse os arquivos.
- No Windows Explorer, abra "Este computador" na barra lateral e abra o disco local `C:`.
- Crie uma pasta com o nome `sqlite3`.
- Copie os arquivos extraídos para a pasta `C:\sqlite3` (recém criada). Para ver se tudo deu certo, você deve ter os seguintes arquivos nessa pasta: `sqldiff`, `sqlite3.def`, `sqlite3.dll`, `sqlite3` e `sqlite3_analyzer`.
- Abra o prompt de comando do Windows e execute o seguinte comando para adicionar a pasta `c:\sqlite3` ao PATH do sistema, para que seu computador saiba onde essa pasta está quando precisar.
  - Para quem tem prompt de comando:
    - `setx path "%path%;c:\sqlite3"`
  - Para quem tem Powershell:
    - `setx path "c:\sqlite3"`
- Feche o prompt de comando do Windows.
- Reabra o prompt de comando do Windows e execute o seguinte comando para verificar se a instalação foi bem-sucedida. Ele deve mostrar uma versão como, por exemplo, `3.31.1` (versão mostrada pode ser diferente, nada é 100% exato).

{% highlight sh %}
sqlite3 --version
{% endhighlight %}

- Feche o prompt de comando do Windows.

### *5.* Instalando o Rails

- Abra o prompt de comando do Windows, execute o seguinte comando. Isso instalará o Rails e as gems do bundler (gerenciador de gems) no seu computador.

{% highlight sh %}
gem install rails bundler --no-document
{% endhighlight %}

- Abra o prompt de comando do Windows e execute o seguinte comando para verificar se a instalação foi bem-sucedida. Ele deve mostrar uma versão como, por exemplo, `Rails 6.0.2.1` (a versão mostrada pode ser diferente).

{% highlight sh %}
rails --version
{% endhighlight %}

_Se você tiver algum problema durante esta etapa, verifique a parte de [Possíveis erros](#possíveis-erros-durante-a-instalação) para obter possíveis soluções._

### *6.* Instalar um editor de texto

Para esse workshop recomendamos o editor de texto Atom.

- Vá para a [página de download do Atom](https://github.com/atom/atom/releases/latest).
  - Clique em `AtomSetup.exe` para baixar o editor.
  - Execute o instalador. Clique no instalador usando todas as opções padrão.

Se você estiver usando o Windows Vista ou versões anteriores, poderá usar outro editor, como por exemplo [Sublime Text 2](http://www.sublimetext.com/2). Apenas garanta que você não esteja confundindo o prompt de comando com o editor de texto: altere o tema do editor, escolhendo uma das seguintes opções: "iPlastic", "Slush &amp; Poppies", or "Zenburnesque".


### *7.* Verificando o ambiente

Para ter certeza que tudo funciona bem crie uma aplicação via terminal:

{% highlight sh %}
rails new myapp
{% endhighlight %}

{% highlight sh %}
cd myapp
{% endhighlight %}

{% highlight sh %}
rails server
{% endhighlight %}

Vá para `http://localhost:3000` no seu navegador, você deverá ver a página 'Yay! You're on Rails!'. Parabéns!

_Se você tiver algum problema durante esta etapa, verifique a parte de [Possíveis erros](#possíveis-erros-durante-a-instalação) para obter possíveis soluções._

**Instrutor(a):** Recomendamos verificar o comando scaffold e inserir dados com a página gerada com os instrutores(as) para garantir que tudo esteja funcionando. Além disso: remova o aplicativo de teste `myapp` para garantir que ninguém esteja trabalhando na pasta errada, seguindo as etapas do workshop.

<hr />

## Instalação para Linux

Para instalar o ambiente de Ruby on Rails você deve apenas copiar a linha abaixo para sua distribuição Linux (Ubuntu ou Fedora), e colar no **Terminal** e pressionar Enter. Aproveite o texto que aparece na tela; irá levar algum tempo para o processo acabar. Nesse meio tempo, encorajamos você a pegar uma bebida refrescante antes de comecar.

### *1.* Instalar Yarn

Se você precisa de mais informações para instalação do yarn, confira a [documentação de instalação do yarn](https://yarnpkg.com/lang/pt-br/docs/install/#debian-stable)

#### Para Ubuntu:

{% highlight sh %}
sudo apt-get install curl
{% endhighlight %}

{% highlight sh %}
curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
{% endhighlight %}

{% highlight sh %}
sudo apt update && sudo apt install yarn
{% endhighlight %}

#### Para Fedora:

{% highlight sh %}
curl -sL https://rpm.nodesource.com/setup_12.x | bash -
curl --silent --location https://dl.yarnpkg.com/rpm/yarn.repo | sudo tee /etc/yum.repos.d/yarn.repo
{% endhighlight %}

{% highlight sh %}
sudo yum install yarn
{% endhighlight %}

### *2.* Instalar Rails

#### Para Ubuntu

{% highlight sh %}
bash < <(curl -sL https://raw.github.com/railsgirls/installation-scripts/master/rails-install-ubuntu.sh)
{% endhighlight %}

Se você for usar a instalação do **RVM** com gnome-terminal, você provavelmente vai precisar mudar suas configurações padrões antes de começar a usar a versão correta do Ruby on Rails. Descubra como: [Documentação do RVM](http://rvm.io/integration/gnome-terminal).


#### Para Fedora

{% highlight sh %}
bash < <(curl -sL https://raw.github.com/railsgirls/installation-scripts/master/rails-install-fedora.sh)
{% endhighlight %}


Para ter certeza que tudo funciona bem crie uma aplicação via terminal:

{% highlight sh %}
rails new myapp
{% endhighlight %}

### *3.* Instalar editor de texto

Para esse workshop recomendamos o editor de texto Sublime Text

* [Baixar e instalar Sublime Text](http://www.sublimetext.com/2)

### *4.* Atualizar seu navegador (browser)

Acesse [whatbrowser.org](http://whatbrowser.org) e atualize seu navegador, caso não tenha a versão mais recente.

**Parabéns, seu ambiente de desenvolvimento Ruby on Rails está pronto!**

<hr />


## Utilização da Máquina Virtual

Ao invés de instalar todas as ferramentas em seu computador, você pode configurar um ambiente de desenvolvimento em uma Máquina Virtual. Favor, verifique os deltalhes [aqui]({% post_url 2014-03-24-alternative-dev-environment %}).

<hr />

## Utilização de Serviço em Nuvem

Ao invés de instalar **Ruby on Rails** e o editor em seu computador, você pode utilizar um webservice para desenvolvimento. Tudo que precisa é um navegador e conexão com a internet. Esse tutorial explica como utilizar o [codenvy.io](https://codenvy.io). Se você utilizar outro serviço, talvez eles utilizem outra nomeclatura, como por exemplo 'workspace' ao invés de 'box', mas o processo é geralmente bem parecido.

### *1.* Atualizar seu navegador (browser)

Se você utiliza **Internet Explorer**, recomendamos instalar o [Firefox](mozilla.org/firefox) ou [Google Chrome](google.com/chrome).

Acesse [whatbrowser.org](http://whatbrowser.org) e atualize seu navegador, caso não tenha a versão mais recente.

### *2.* Criar uma conta

Acesse [codenvy.io](https://codenvy.io) e crie sua conta de graça.

![](/images/codenvy/create-account.jpg)

### *3.* Configure seu workspace de desenvolvimento Ruby on Rails

O Ruby on Rails Workspace possui pré-instalado todo o software que nós precisamos para o workshop. Para criar um workspace, logue em [codenvy.io](https://codenvy.io) e clique em 'Dashboard'. Se nenhum foi criado, o botão 'New Workspace' irá aparecer.

![](/images/codenvy/create-workspace-dashboard.jpg)

Na tela 'New workspace', algumas configurações tem que ser feitas.

* 'New from blank, template, or sample project' deve estar selecionado
* Selecione 'Create new workspace from stack'
* Selecione 'Ready to go Stacks'
* Selecione 'Rails' Stack
* De ao workspace um nome de sua escolha. Neste exemplo, ele se chamará 'railsgirls'.
* Agora clique em 'Create' para criar o workspace (levará alguns minutos para o processo finalizar)

![](/images/codenvy/create-workspace.jpg)

* Codeenvy cria uma pasta '/projects' durante a instalação, que você poderá depois colocar seu código. Ele também cria uma pasta 'console-ruby-simple' que nós não precisamos. VOcê pode vê-lo no Project Explorer. Ignore ou delete a pasta clicando com o botão direito.

### *4.* Encontre e reinicie seu workspace
* Se você acabou de criar seu projeto, você pode provavelmente pular estes passos - eles são bons de saber se você fizer login no Codenvy mais tarde
* Se você não utilizou seu workspace ou projetos por um tempo, eles talvez possam ser desligados por inatividade. Vocé irá notar um círculo vazio próximo ao nome do workspace.

![](/images/codenvy/start-workspace.jpg)

* Neste caso simplesmente clique no nome do workspace. Ele então será reiniciado (o que pode demorar um pouco) e depois abrirá.
* Se você reiniciou seu workspace, você precisará rodar o comando `bundle` de novo no diretório do seu projeto Rails (o que você irá aprender mais sobre o comando no tutorial do app)

### *5.* Codificar com sua box de desenvolvimento

* Ao lado esquerdo você encontra o navegador de arquivos onde você pode navegar entre seus diretórios e arquivos
* No meio você encontra o editor para modificar seus arquivos
* Na parte de baixo você encontra o terminal onde executa os comandos
* Tudo que você precisa agora está na janela do seu browser - não precisa iniciar um editor ou terminal em outro lugar
* Se você está seguindo um guia ou um tutorial, use comandos para Linux mesmo que você esteja em um computador Windows - seu sistema operacional não importa, desde que todos os comandos estejam rodando em  uma máquina do seu projeto na nuvem, que roda Linux
* Se um guia ou tutorial te perguntar para rodar um comando rails que contem `rails` ou `rake`, adicione anteriormente `bundle exec` a este comando, e. g. `bundle exec rake db:migrate`. Exceção: o comando `rails new` não é pré-fixado.
* Se um guia ou tutorial te pedir para iniciar o servidor com `rails server` ou `rails s`, adicione `-b 0.0.0.0` ao final deste comando, então execute `rails server -b 0.0.0.0`
* Se um guia ou tutorial te pedir para apontar seu browser para algo como http://localhost:3000, siga estas instruções:
  * Abra 'Operations perspective' (1) no Codenvy, vá na aba 'Servers' (2) e selecione 'Server Address' na linha começando com 'Server-3000-tcp' (3). Ao invés de abrir http://localhost:3000, abra esta URL no seu browser.
  ![](/images/codenvy/get-workspace-ip.jpg)
  * Se, por exemplo, você for pedido para abrir http://localhost:3000/posts, abra a URL anterior no seu browser e adicione '/posts' a URL.


## Possíveis erros durante a instalação

### Gem::RemoteFetcher error

Se você ver este erro ao executar `rails new railsgirls` ou` gem update rails`:

{% highlight sh %}
Gem::RemoteFetcher::FetchError: SSL_connect returned=1 errno=0 state=SSLv3 read
server certificate B: certificate verify failed (https://rubygems.org/gems/i18n-0.6.11.gem)
{% endhighlight %}

Isso significa que você possui uma versão mais antiga do Rubygems e precisará atualizá-la manualmente. Primeiro verifique sua versão atual do Rubygems no seu terminal:

{% highlight sh %}
gem -v
{% endhighlight %}

Se for menor que `2.6.5`, será necessário atualizá-la manualmente:

Primeiramente baixe [ruby-gems-update gem](https://rubygems.org/gems/rubygems-update-2.6.11.gem). Mova este arquivo para `c:\\rubygems-update-2.6.11.gem` e execute:

{% highlight sh %}
gem install --local c:\\rubygems-update-2.6.11.gem
{% endhighlight %}

{% highlight sh %}
update_rubygems --no-document
{% endhighlight %}

{% highlight sh %}
gem uninstall rubygems-update -x
{% endhighlight %}

Confira novamente sua versão de ruby:

{% highlight sh %}
gem -v
{% endhighlight %}

Verifique se é igual ou superior a 2.6.11. Execute novamente o comando que estava falhando anteriormente.

Se você ainda estiver com problemas, sempre poderá encontrar a versão mais recente do rubygems online em [rubygems.org] (https://rubygems.org/pages/download). Se você clicar em **GEM**, deverá ver a versão mais recente.

### Durante o bundle install

O erro `Gem :: RemoteFetcher :: FetchError: SSL_connect` também pode ocorrer durante a fase de `bundle install` ao criar uma aplicação nova em rails.

O erro deve mencionar [bit.ly/ruby-sslingerie(http://bit.ly/ruby-ssl). O que pode ser relevante para os usuários de Windows neste momento é [esta página do GitHub] (https://gist.github.com/867550). A maneira manual descrita nesta solução provou ser bem-sucedida na solução do erro `instalação do pacote configurável`.

### 'x64_mingw' is not a valid platform Error

Às vezes, você pode receber o seguinte erro ao executar `rails server`:
`'x64_mingw' is not a valid platform` Se você tiver esse erro após executar o RailsInstaller, precisará fazer uma pequena edição no arquivo `Gemfile`:

Olhe para a parte inferior do arquivo. Você provavelmente verá algo assim como uma das últimas linhas do arquivo:
`gem 'tzinfo-data', platforms: [:mingw, :mswin, :x64_mingw]`. Se você tem essa linha com  `:x64_mingw`, delete a parte `:x64_mingw`. No fim, queremos que se pareça com:
`'tzinfo-data', platforms: [:mingw, :mswin]`

Depois de fazer isso, abra seu prompt de comando novamente e digite `bundle update`.

### The sqlite3 gem failed to install

Ao executar `rails new myapp`, a gem `sqlite3` pode falhar na instalação. Quando isso acontecer, feche primeiro seu prompt de comando. Em seguida, abra o prompt novamente.

Em seguida, instale o `sqlite3` separadamente do `rails` executando o seguinte comando no prompt de comando:

{% highlight sh %}
gem install sqlite3
{% endhighlight %}

Se isso der certo, remova o diretório `myapp` que o instalador do rails criou anteriorment e retorne às instruções de instalação para criar o app novamente (`rails new myapp`).

{% include other-guides.md page="install" %}
