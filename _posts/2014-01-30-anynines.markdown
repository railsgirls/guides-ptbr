---
layout: default
title: Rails Girls no anynines
permalink: anynines
---

# Coloque seu app online com anynines

*Criado por Floor Drees, [@floordrees](https://twitter.com/floordrees)*

*Traduzido por [Júlio Fortunato](https://github.com/JulioFortunato)*

__INSTRUTOR(A)__: Fale sobre os benefícios de fazer o deploy para o anynines vs utilizar outros data centers.

### Pegue um pouco de anynines para você

1. [Crie uma conta do anynines](http://anynines.com/).

2. [Faça o download e instale a Interface de Linha de Comando](https://anynines.zendesk.com/entries/60241846-How-to-install-the-CLI-v6) para interagir com o anynines.

3. Agora selecione o endpoint da api do anynines como destino e autentique-se usando suas credenciais:

{% highlight sh %}
cf api https://api.de.a9s.eu  
cf login -u [seu@email] -p [suasenha]  
{% endhighlight %}

Ou, se isso não funcionar para você, use:

{% highlight sh %}
cf login
{% endhighlight %}

... que solicitará seu endereço de email e senha.

Se perguntando o que `cf` significa? É um atalho para [Cloud Foundry](http://www.cloudfoundry.com/), um sistema que o anynines usa nos bastidores.

### Envie seu app online

Vamos enviar o código-fonte da sua máquina local para o anynines:
{% highlight sh %}
$> cf push [nome-do-app-de-sua-escolha]
{% endhighlight %}

Isso falhará miseravelmente, já que a aplicação precisa de um banco de dados MySQL para iniciar. Então, vamos criar um! O comando abaixo vai criar um serviço do MySQL com o plano gratuito. Depois do nome do plano, você precisa especificar um nome para a instância do serviço. Esse nome será usado em comandos futuros para se referir a essa instância do serviço:

{% highlight sh %}
$> cf create-service mysql Pluto-free [nome-do-servico-de-sua-escolha]
{% endhighlight %}

(Sério, você pode usar qualquer nome. Faça valer a pena!)

Em seguida, vinculamos a instância do serviço MySQL à aplicação, para conceder à aplicação acesso à instância do MySQL, digite:
{% highlight sh %}
$> cf bind-service [nome-do-app-que-você-escolheu-acima] [nome-do-serviço-que-você-escolheu-acima]
{% endhighlight %}

Por fim, temos que reiniciar a aplicação para garantir que o vínculo do serviço funcionou:
{% highlight sh %}
$> cf restart [nome-do-app-que-você-escolheu-acima]
{% endhighlight %}

Você verá isto:  
{% highlight sh %}
Creating service postgresql-d2197... OK  
Binding postgresql-d2197 to railsgirls... OK  
{% endhighlight %}

Terminando com... `Push successful! App 'railsgirls' available at railsgirls.de.a9sapp.eu`. Score!

### Controle de Versão

Nós precisamos adicionar nosso novo código ao controle de versão. Você pode fazer isso executando o seguinte comando no terminal:

{% highlight sh %}
git status
git add .
git commit -m "add anynines deployment"
{% endhighlight %}

__INSTRUTOR(A)__: Este será um ótimo momento para falar sobre sistemas de controle de versão e git, se ainda não o fez.

### Ajuda

Você pode checar todos os sub-comandos do cf disponíveis digitando `cf help`.
No caso de seu terminal não ter todas as respostas, a equipe do anynines certamente terá. Apenas envie um email para eles em support@anynines.com.

Bons deploys!

{% include other-guides.md page="anynines" %}

